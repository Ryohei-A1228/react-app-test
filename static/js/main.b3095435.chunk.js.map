{"version":3,"sources":["reportWebVitals.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","renderSquare","React","Component","Game","history","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3095435.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true,\n    };\n  }\n  renderSquare(i) {\n    return <Square \n    value={this.props.squares[i]}\n    onClick={() => this.props.onClick(i)}/>;\n  }\n\n  render() {\n\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n      squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n          squares={current.squares}\n          onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}